export const data = JSON.parse("{\"key\":\"v-25defda2\",\"path\":\"/%E5%85%B6%E4%BB%96/Xcode/2.html\",\"title\":\"Xcode bulid速度\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2021-11-15T00:00:00.000Z\",\"category\":[\"苹果\"],\"tag\":[\"红\",\"大\",\"圆\"],\"star\":true,\"description\":\"Xcode bulid速度 在Xcode中分析build性能，以加快Xcode build速度。这可以轻松加快工作流程并节省大量时间。 Build With Timing Summary Xcode 10引入了带有 Build with Timing summary 功能。build一次项目并生成每个类别所花费的时间概览。 功能入口: Product ➔ Perform Action ➔ Build with Timing Summary或使用xcodebuild -showBuildTimingSummary\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://yunpu.tech/%E5%85%B6%E4%BB%96/Xcode/2.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"夏日的瓜牛\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Xcode bulid速度\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Xcode bulid速度 在Xcode中分析build性能，以加快Xcode build速度。这可以轻松加快工作流程并节省大量时间。 Build With Timing Summary Xcode 10引入了带有 Build with Timing summary 功能。build一次项目并生成每个类别所花费的时间概览。 功能入口: Product ➔ Perform Action ➔ Build with Timing Summary或使用xcodebuild -showBuildTimingSummary\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"http://yunpu.tech/\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"Xcode bulid速度\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"红\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"大\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"圆\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2021-11-15T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Xcode bulid速度\\\",\\\"image\\\":[\\\"http://yunpu.tech/\\\"],\\\"datePublished\\\":\\\"2021-11-15T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Build With Timing Summary\",\"slug\":\"build-with-timing-summary\",\"link\":\"#build-with-timing-summary\",\"children\":[]},{\"level\":2,\"title\":\"编译源代码持续时间超过总build时间？\",\"slug\":\"编译源代码持续时间超过总build时间\",\"link\":\"#编译源代码持续时间超过总build时间\",\"children\":[]},{\"level\":2,\"title\":\"优化build\",\"slug\":\"优化build\",\"link\":\"#优化build\",\"children\":[]},{\"level\":2,\"title\":\"仅在需要时run a build phase\",\"slug\":\"仅在需要时run-a-build-phase\",\"link\":\"#仅在需要时run-a-build-phase\",\"children\":[]},{\"level\":2,\"title\":\"函数和表达式的类型检查\",\"slug\":\"函数和表达式的类型检查\",\"link\":\"#函数和表达式的类型检查\",\"children\":[]},{\"level\":2,\"title\":\"Build settings 加快build\",\"slug\":\"build-settings-加快build\",\"link\":\"#build-settings-加快build\",\"children\":[{\"level\":3,\"title\":\"COMPILATION MODE\",\"slug\":\"compilation-mode\",\"link\":\"#compilation-mode\",\"children\":[]},{\"level\":3,\"title\":\"OPTIMIZATION LEVEL\",\"slug\":\"optimization-level\",\"link\":\"#optimization-level\",\"children\":[]},{\"level\":3,\"title\":\"BUILD ACTIVE ARCHITECTURE ONLY\",\"slug\":\"build-active-architecture-only\",\"link\":\"#build-active-architecture-only\",\"children\":[]},{\"level\":3,\"title\":\"DEBUG INFORMATION FORMAT (DWARF)\",\"slug\":\"debug-information-format-dwarf\",\"link\":\"#debug-information-format-dwarf\",\"children\":[]}]}],\"readingTime\":{\"minutes\":4.54,\"words\":1362},\"filePathRelative\":\"其他/Xcode/2.md\",\"localizedDate\":\"2021年11月15日\",\"excerpt\":\"<h1> Xcode bulid速度</h1>\\n<p>在Xcode中分析build性能，以加快Xcode build速度。这可以轻松加快工作流程并节省大量时间。</p>\\n<h2> Build With Timing Summary</h2>\\n<p>Xcode 10引入了带有 Build with Timing summary 功能。build一次项目并生成每个类别所花费的时间概览。\\n<br></p>\\n<blockquote>\\n<p>功能入口:</p>\\n<p>Product ➔ Perform Action ➔ Build with Timing Summary或使用xcodebuild -showBuildTimingSummary</p>\\n</blockquote>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
