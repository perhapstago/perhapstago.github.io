export const data = JSON.parse("{\"key\":\"v-766b15fa\",\"path\":\"/%E5%BC%80%E5%8F%91/%E3%80%8ESwift%E3%80%8F/3.html\",\"title\":\"协议和扩展\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2020-12-30T00:00:00.000Z\",\"category\":[\"iOS\",\"Swift\"],\"tag\":[\"语法\"],\"description\":\"协议和扩展 协议 (Protocol) 协议是一种描述某物必须具有的属性和方法的方式。告诉Swift哪些类型使用该协议——这个过程被称为采用协议。 编写一个函数来接受具有id属性的东西，但我们并不关心使用哪种类型的数据。 首先创建一个Identifiable协议，该协议将要求所有符合要求的类型都有一个可以读取（“get”）或写入（“set”）的id字符串： protocol Identifiable { var id: String { get set } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://yunpu.tech/%E5%BC%80%E5%8F%91/%E3%80%8ESwift%E3%80%8F/3.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"夏日的瓜牛\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"协议和扩展\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"协议和扩展 协议 (Protocol) 协议是一种描述某物必须具有的属性和方法的方式。告诉Swift哪些类型使用该协议——这个过程被称为采用协议。 编写一个函数来接受具有id属性的东西，但我们并不关心使用哪种类型的数据。 首先创建一个Identifiable协议，该协议将要求所有符合要求的类型都有一个可以读取（“get”）或写入（“set”）的id字符串： protocol Identifiable { var id: String { get set } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"语法\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2020-12-30T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"协议和扩展\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2020-12-30T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"协议 (Protocol)\",\"slug\":\"协议-protocol\",\"link\":\"#协议-protocol\",\"children\":[]},{\"level\":2,\"title\":\"协议继承\",\"slug\":\"协议继承\",\"link\":\"#协议继承\",\"children\":[]},{\"level\":2,\"title\":\"扩展 (Extension)\",\"slug\":\"扩展-extension\",\"link\":\"#扩展-extension\",\"children\":[]},{\"level\":2,\"title\":\"协议扩展\",\"slug\":\"协议扩展\",\"link\":\"#协议扩展\",\"children\":[]},{\"level\":2,\"title\":\"面向协议编程\",\"slug\":\"面向协议编程\",\"link\":\"#面向协议编程\",\"children\":[]}],\"readingTime\":{\"minutes\":2.74,\"words\":823},\"filePathRelative\":\"开发/『Swift』/3.md\",\"localizedDate\":\"2020年12月30日\",\"excerpt\":\"<h1> 协议和扩展</h1>\\n<h2> 协议 (Protocol)</h2>\\n<p>协议是一种描述某物必须具有的属性和方法的方式。告诉Swift哪些类型使用该协议——这个过程被称为采用协议。\\n编写一个函数来接受具有id属性的东西，但我们并不关心使用哪种类型的数据。\\n首先创建一个Identifiable协议，该协议将要求所有符合要求的类型都有一个可以读取（“get”）或写入（“set”）的id字符串：</p>\\n<div class=\\\"language-swift line-numbers-mode\\\" data-ext=\\\"swift\\\"><pre class=\\\"language-swift\\\"><code><span class=\\\"token keyword\\\">protocol</span> <span class=\\\"token class-name\\\">Identifiable</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">get</span> <span class=\\\"token keyword\\\">set</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
