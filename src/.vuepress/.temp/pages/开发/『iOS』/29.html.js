export const data = JSON.parse("{\"key\":\"v-31a55e64\",\"path\":\"/%E5%BC%80%E5%8F%91/%E3%80%8EiOS%E3%80%8F/29.html\",\"title\":\"Swift 与 OC\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2023-3-10\",\"category\":[\"iOS\",\"swift\"],\"tag\":[\"区分\",\"底层原理\"],\"description\":\"Swift 与 OC 共同点 都是C语言的超集。OC在C语言基础上添加了一些面向对象编程的特性，Swift也是建立在C语言基础之上。 OC的引用计数、ARC、属性、协议、接口、初始化、扩展类、命名参数、匿名函数等，在Swift中继续有效。 Swift和OC共用一套运行时环境，Swift的类型可以桥接到OC，反之亦然 swift 优点 更安全 swift更安全，OC更灵活 swift 安全性，包括： 类型安全：Swift 是一种静态类型语言，编译时会检查变量类型，可以避免一些常见的类型错误，如类型转换错误、访问不存在的方法或属性等。 内存安全：Swift 使用自动引用计数 (ARC) 来管理内存，可以避免常见的内存泄漏和野指针问题。 安全的字符串和集合操作：Swift 提供了强类型的字符串和集合类型，可以避免常见的字符串和集合操作中的缓冲区溢出和数组越界等安全问题。\"},\"headers\":[{\"level\":2,\"title\":\"共同点\",\"slug\":\"共同点\",\"link\":\"#共同点\",\"children\":[]},{\"level\":2,\"title\":\"swift 优点\",\"slug\":\"swift-优点\",\"link\":\"#swift-优点\",\"children\":[{\"level\":3,\"title\":\"更安全\",\"slug\":\"更安全\",\"link\":\"#更安全\",\"children\":[]},{\"level\":3,\"title\":\"静态类型语言\",\"slug\":\"静态类型语言\",\"link\":\"#静态类型语言\",\"children\":[]},{\"level\":3,\"title\":\"面向XX编程\",\"slug\":\"面向xx编程\",\"link\":\"#面向xx编程\",\"children\":[]},{\"level\":3,\"title\":\"注重值类型\",\"slug\":\"注重值类型\",\"link\":\"#注重值类型\",\"children\":[]},{\"level\":3,\"title\":\"语法文件特点\",\"slug\":\"语法文件特点\",\"link\":\"#语法文件特点\",\"children\":[]},{\"level\":3,\"title\":\"可选类型\",\"slug\":\"可选类型\",\"link\":\"#可选类型\",\"children\":[]},{\"level\":3,\"title\":\"协议\",\"slug\":\"协议\",\"link\":\"#协议\",\"children\":[]},{\"level\":3,\"title\":\"泛型类型\",\"slug\":\"泛型类型\",\"link\":\"#泛型类型\",\"children\":[]},{\"level\":3,\"title\":\"高阶函数\",\"slug\":\"高阶函数\",\"link\":\"#高阶函数\",\"children\":[]},{\"level\":3,\"title\":\"访问权限\",\"slug\":\"访问权限\",\"link\":\"#访问权限\",\"children\":[]},{\"level\":3,\"title\":\"元组\",\"slug\":\"元组\",\"link\":\"#元组\",\"children\":[]},{\"level\":3,\"title\":\"速度快\",\"slug\":\"速度快\",\"link\":\"#速度快\",\"children\":[]}]},{\"level\":2,\"title\":\"swift 不足点\",\"slug\":\"swift-不足点\",\"link\":\"#swift-不足点\",\"children\":[]},{\"level\":2,\"title\":\"swift 一些细节\",\"slug\":\"swift-一些细节\",\"link\":\"#swift-一些细节\",\"children\":[]}],\"readingTime\":{\"minutes\":13.8,\"words\":4141},\"filePathRelative\":\"开发/『iOS』/29.md\",\"localizedDate\":\"2023年3月10日\",\"excerpt\":\"<h1> Swift 与 OC</h1>\\n<h2> 共同点</h2>\\n<ul>\\n<li>都是C语言的超集。OC在C语言基础上添加了一些面向对象编程的特性，Swift也是建立在C语言基础之上。</li>\\n<li>OC的引用计数、ARC、属性、协议、接口、初始化、扩展类、命名参数、匿名函数等，在Swift中继续有效。</li>\\n<li>Swift和OC共用一套运行时环境，Swift的类型可以桥接到OC，反之亦然</li>\\n</ul>\\n<h2> swift 优点</h2>\\n<h3> 更安全</h3>\\n<p>swift更安全，OC更灵活 <br></p>\\n<p>swift 安全性，包括：</p>\\n<ul>\\n<li>类型安全：Swift 是一种静态类型语言，编译时会检查变量类型，可以避免一些常见的类型错误，如类型转换错误、访问不存在的方法或属性等。<br></li>\\n<li>内存安全：Swift 使用自动引用计数 (ARC) 来管理内存，可以避免常见的内存泄漏和野指针问题。<br></li>\\n<li>安全的字符串和集合操作：Swift 提供了强类型的字符串和集合类型，可以避免常见的字符串和集合操作中的缓冲区溢出和数组越界等安全问题。<br></li>\\n</ul>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
