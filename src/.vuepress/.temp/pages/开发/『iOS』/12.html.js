export const data = JSON.parse("{\"key\":\"v-1e65926c\",\"path\":\"/%E5%BC%80%E5%8F%91/%E3%80%8EiOS%E3%80%8F/12.html\",\"title\":\"静态库与动态库\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2020-7-02\",\"description\":\"静态库与动态库 在iOS开发中，库是一个非常常见的概念，它是一组预编译的二进制代码，可以被应用程序调用，以便重复使用和提高代码的可维护性。iOS中的库主要分为两种：静态库和动态库。 静态库 静态库是一组已经编译好的二进制代码，它们被打包成一个单独的文件，可以在编译时链接到应用程序中。静态库的扩展名通常为.a。在链接时，编译器会将静态库的代码复制到可执行文件中，因此它们可以被静态链接到应用程序中，这意味着应用程序在运行时不需要依赖任何外部库或动态链接器。 静态库的优点在于它们非常容易使用，因为它们包含所有必需的代码和符号，这样就可以保证应用程序在不同的环境中具有相同的行为。此外，静态库的代码在链接时就已经被编译和优化了，因此它们在应用程序中的性能通常比动态库更好。最后，静态库在应用程序中的安全性也更高，因为它们不能被动态修改或替换。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://yunpu.tech/%E5%BC%80%E5%8F%91/%E3%80%8EiOS%E3%80%8F/12.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"夏日的瓜牛\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"静态库与动态库\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"静态库与动态库 在iOS开发中，库是一个非常常见的概念，它是一组预编译的二进制代码，可以被应用程序调用，以便重复使用和提高代码的可维护性。iOS中的库主要分为两种：静态库和动态库。 静态库 静态库是一组已经编译好的二进制代码，它们被打包成一个单独的文件，可以在编译时链接到应用程序中。静态库的扩展名通常为.a。在链接时，编译器会将静态库的代码复制到可执行文件中，因此它们可以被静态链接到应用程序中，这意味着应用程序在运行时不需要依赖任何外部库或动态链接器。 静态库的优点在于它们非常容易使用，因为它们包含所有必需的代码和符号，这样就可以保证应用程序在不同的环境中具有相同的行为。此外，静态库的代码在链接时就已经被编译和优化了，因此它们在应用程序中的性能通常比动态库更好。最后，静态库在应用程序中的安全性也更高，因为它们不能被动态修改或替换。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2020-07-01T16:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"静态库与动态库\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2020-07-01T16:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"静态库\",\"slug\":\"静态库\",\"link\":\"#静态库\",\"children\":[]},{\"level\":2,\"title\":\"动态库\",\"slug\":\"动态库\",\"link\":\"#动态库\",\"children\":[]},{\"level\":2,\"title\":\"选择\",\"slug\":\"选择\",\"link\":\"#选择\",\"children\":[]},{\"level\":2,\"title\":\"使用\",\"slug\":\"使用\",\"link\":\"#使用\",\"children\":[{\"level\":3,\"title\":\"创建静态库\",\"slug\":\"创建静态库\",\"link\":\"#创建静态库\",\"children\":[]},{\"level\":3,\"title\":\"创建动态库\",\"slug\":\"创建动态库\",\"link\":\"#创建动态库\",\"children\":[]},{\"level\":3,\"title\":\"使用静态库和动态库\",\"slug\":\"使用静态库和动态库\",\"link\":\"#使用静态库和动态库\",\"children\":[]}]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}],\"readingTime\":{\"minutes\":5.28,\"words\":1583},\"filePathRelative\":\"开发/『iOS』/12.md\",\"localizedDate\":\"2020年7月2日\",\"excerpt\":\"<h1> 静态库与动态库</h1>\\n<p>在iOS开发中，库是一个非常常见的概念，它是一组预编译的二进制代码，可以被应用程序调用，以便重复使用和提高代码的可维护性。iOS中的库主要分为两种：静态库和动态库。</p>\\n<h2> 静态库</h2>\\n<p>静态库是一组已经编译好的二进制代码，它们被打包成一个单独的文件，可以在编译时链接到应用程序中。静态库的扩展名通常为.a。在链接时，编译器会将静态库的代码复制到可执行文件中，因此它们可以被静态链接到应用程序中，这意味着应用程序在运行时不需要依赖任何外部库或动态链接器。<br></p>\\n<p>静态库的优点在于它们非常容易使用，因为它们包含所有必需的代码和符号，这样就可以保证应用程序在不同的环境中具有相同的行为。此外，静态库的代码在链接时就已经被编译和优化了，因此它们在应用程序中的性能通常比动态库更好。最后，静态库在应用程序中的安全性也更高，因为它们不能被动态修改或替换。<br></p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
