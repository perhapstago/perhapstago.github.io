export const data = JSON.parse("{\"key\":\"v-1f046d71\",\"path\":\"/%E5%BC%80%E5%8F%91/Vue/4.html\",\"title\":\"插槽\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2022-01-04T00:00:00.000Z\",\"category\":[\"苹果\",\"水果\"],\"tag\":[\"红\",\"大\",\"圆\"],\"description\":\"插槽 插槽是Vue中非常重要的一个特性，它允许我们将组件的内容分发到它的子组件中。通过插槽可以很容易地定义一个可重用的组件，使它在不同的场景下具有不同的表现形式，而不需要改变组件的实现方式。 基本用法 插槽是Vue组件中的一种占位符，它可以接受父组件传递的任意内容，并将其分发到插槽所在的子组件中。插槽可以是默认插槽，也可以是具名插槽。 默认插槽 默认插槽是Vue组件中未命名的插槽，当父组件没有提供具名插槽时，会将所有内容分发到默认插槽中。默认插槽可以用一个 &lt;!-- Parent Component --&gt; &lt;template&gt; &lt;div&gt; &lt;h1&gt;Parent Component&lt;/h1&gt; &lt;ChildComponent&gt; &lt;p&gt;Hello from parent component!&lt;/p&gt; &lt;/ChildComponent&gt; &lt;/div&gt; &lt;/template&gt; &lt;!-- Child Component --&gt; &lt;template&gt; &lt;div&gt; &lt;h2&gt;Child Component&lt;/h2&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/template&gt;\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://yunpu.tech/%E5%BC%80%E5%8F%91/Vue/4.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"夏日的瓜牛\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"插槽\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"插槽 插槽是Vue中非常重要的一个特性，它允许我们将组件的内容分发到它的子组件中。通过插槽可以很容易地定义一个可重用的组件，使它在不同的场景下具有不同的表现形式，而不需要改变组件的实现方式。 基本用法 插槽是Vue组件中的一种占位符，它可以接受父组件传递的任意内容，并将其分发到插槽所在的子组件中。插槽可以是默认插槽，也可以是具名插槽。 默认插槽 默认插槽是Vue组件中未命名的插槽，当父组件没有提供具名插槽时，会将所有内容分发到默认插槽中。默认插槽可以用一个 &lt;!-- Parent Component --&gt; &lt;template&gt; &lt;div&gt; &lt;h1&gt;Parent Component&lt;/h1&gt; &lt;ChildComponent&gt; &lt;p&gt;Hello from parent component!&lt;/p&gt; &lt;/ChildComponent&gt; &lt;/div&gt; &lt;/template&gt; &lt;!-- Child Component --&gt; &lt;template&gt; &lt;div&gt; &lt;h2&gt;Child Component&lt;/h2&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/template&gt;\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"红\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"大\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"圆\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-01-04T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"插槽\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-01-04T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"基本用法\",\"slug\":\"基本用法\",\"link\":\"#基本用法\",\"children\":[{\"level\":3,\"title\":\"默认插槽\",\"slug\":\"默认插槽\",\"link\":\"#默认插槽\",\"children\":[]},{\"level\":3,\"title\":\"具名插槽\",\"slug\":\"具名插槽\",\"link\":\"#具名插槽\",\"children\":[]},{\"level\":3,\"title\":\"作用域插槽\",\"slug\":\"作用域插槽\",\"link\":\"#作用域插槽\",\"children\":[]}]},{\"level\":2,\"title\":\"插槽的高级用法\",\"slug\":\"插槽的高级用法\",\"link\":\"#插槽的高级用法\",\"children\":[{\"level\":3,\"title\":\"动态插槽\",\"slug\":\"动态插槽\",\"link\":\"#动态插槽\",\"children\":[]},{\"level\":3,\"title\":\"动态组件\",\"slug\":\"动态组件\",\"link\":\"#动态组件\",\"children\":[]}]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}],\"readingTime\":{\"minutes\":4.79,\"words\":1436},\"filePathRelative\":\"开发/Vue/4.md\",\"localizedDate\":\"2022年1月4日\",\"excerpt\":\"<h1> 插槽</h1>\\n<p>插槽是Vue中非常重要的一个特性，它允许我们将组件的内容分发到它的子组件中。通过插槽可以很容易地定义一个可重用的组件，使它在不同的场景下具有不同的表现形式，而不需要改变组件的实现方式。</p>\\n<h2> 基本用法</h2>\\n<p>插槽是Vue组件中的一种占位符，它可以接受父组件传递的任意内容，并将其分发到插槽所在的子组件中。插槽可以是默认插槽，也可以是具名插槽。</p>\\n<h3> 默认插槽</h3>\\n<p>默认插槽是Vue组件中未命名的插槽，当父组件没有提供具名插槽时，会将所有内容分发到默认插槽中。默认插槽可以用一个 </p>\\n<div class=\\\"language-html line-numbers-mode\\\" data-ext=\\\"html\\\"><pre class=\\\"language-html\\\"><code><span class=\\\"token comment\\\">&lt;!-- Parent Component --&gt;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>template</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Parent Component<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ChildComponent</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span>Hello from parent component!<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ChildComponent</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>template</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">&lt;!-- Child Component --&gt;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>template</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>Child Component<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>slot</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>slot</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>template</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
