import{_ as n,X as s,Y as a,a2 as t}from"./framework-8575b556.js";const e={},p=t(`<h1 id="where" tabindex="-1"><a class="header-anchor" href="#where" aria-hidden="true">#</a> where</h1><h2 id="switch中使用" tabindex="-1"><a class="header-anchor" href="#switch中使用" aria-hidden="true">#</a> switch中使用</h2><p>定义枚举：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">enum</span> <span class="token class-name">Action</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token function">createUser</span><span class="token punctuation">(</span>age<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span>
    <span class="token keyword">case</span> createPost
    <span class="token keyword">case</span> logout
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>筛选特定年龄段的案例：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">func</span> <span class="token function-definition function">printAction</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token class-name">Action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> action <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span><span class="token keyword">let</span> age<span class="token punctuation">)</span> <span class="token keyword">where</span> age <span class="token operator">&lt;</span> <span class="token number">21</span><span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Young and wild!&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token punctuation">.</span>createUser<span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Older and wise!&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token punctuation">.</span>createPost<span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Creating a post&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token punctuation">.</span>logout<span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Logout&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">printAction</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token class-name">Action</span><span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span>age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Young and wild</span>
<span class="token function">printAction</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token class-name">Action</span><span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span>age<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Older and wise</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for循环中的使用" tabindex="-1"><a class="header-anchor" href="#for循环中的使用" aria-hidden="true">#</a> for循环中的使用</h2><p>使用for-loop打印偶数：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">let</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> number <span class="token keyword">in</span> numbers <span class="token keyword">where</span> number <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token comment">// 0, 2, 4, 6, 8, 10</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="协议扩展中的使用" tabindex="-1"><a class="header-anchor" href="#协议扩展中的使用" aria-hidden="true">#</a> 协议扩展中的使用</h2><p>基于其元素扩展Array类型：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">extension</span> <span class="token class-name">Array</span> <span class="token keyword">where</span> <span class="token class-name">Element</span> <span class="token operator">==</span> <span class="token class-name">Int</span> <span class="token punctuation">{</span>
    <span class="token keyword">func</span> <span class="token function-definition function">printAverageAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> average <span class="token operator">=</span> total <span class="token operator">/</span> count
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Average age is </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">average</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">]</span>
ages<span class="token punctuation">.</span><span class="token function">printAverageAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Average age is 46</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="first元素筛选的使用" tabindex="-1"><a class="header-anchor" href="#first元素筛选的使用" aria-hidden="true">#</a> first元素筛选的使用</h2><p>根据条件获取第一个元素：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Henk&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;John&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Jack&quot;</span></span><span class="token punctuation">]</span>
<span class="token keyword">let</span> firstJname <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token keyword">where</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span> <span class="token keyword">in</span>
    <span class="token keyword">return</span> name<span class="token punctuation">.</span>first <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;J&quot;</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// Returns John</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="contains筛选的使用" tabindex="-1"><a class="header-anchor" href="#contains筛选的使用" aria-hidden="true">#</a> contains筛选的使用</h2><p>确定数组是否包含条件匹配元素：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">let</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Banana&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Apple&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Kiwi&quot;</span></span><span class="token punctuation">]</span>
<span class="token keyword">let</span> containsBanana <span class="token operator">=</span> fruits<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">where</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>fruit<span class="token punctuation">)</span> <span class="token keyword">in</span>
    <span class="token keyword">return</span> fruit <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;Banana&quot;</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// Returns true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始化中的使用" tabindex="-1"><a class="header-anchor" href="#初始化中的使用" aria-hidden="true">#</a> 初始化中的使用</h2><p>条件初始化器仅允许某些类型初始化：</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">extension</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">init</span><span class="token punctuation">(</span>collection<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span><span class="token punctuation">.</span><span class="token class-name">Element</span> <span class="token operator">==</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span> <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">joined</span><span class="token punctuation">(</span>separator<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;,&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> clubs <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>collection<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;AJAX&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Barcelona&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;PSG&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>clubs<span class="token punctuation">)</span> <span class="token comment">// prints &quot;AJAX, Barcelona, PSG&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","9.html.vue"]]);export{r as default};
