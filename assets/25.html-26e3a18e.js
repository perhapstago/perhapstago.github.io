import{_ as l,X as t,Y as a,Z as e,$ as s}from"./framework-8575b556.js";const n={},i=e("h1",{id:"isequal-isequaltostring",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isequal-isequaltostring","aria-hidden":"true"},"#"),s(" isEqual,isEqualToString,==")],-1),r=e("ul",null,[e("li",null,[e("p",null,"isEqual 默认情况下是比较两个对象的内存地址；isEqual：就是提供了一个可以自定义相等标准的方法。 系统自带的类(比如 Foundation 中 的 NSString, NSArray 等)重写了这个方法，改变了这个方法的判断规则，一般改为比较两个对象的内容，不是内存地址.")]),e("li",null,[e("p",null,"isEqualToString 字符串比较，只比较字符串本身的内容是否一致，不比较内存地址.")]),e("li",null,[e("p",null,"== 两个对象的内存地址是一样，返回true，如果内存地址不一样，返回false.")])],-1),o=[i,r];function u(c,_){return t(),a("div",null,o)}const h=l(n,[["render",u],["__file","25.html.vue"]]);export{h as default};
