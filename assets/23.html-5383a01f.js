import{_ as e,X as a,Y as i,$ as s,a0 as l}from"./framework-8d4f7cb8.js";const c={},n=s("h1",{id:"ismemberofclass-、-iskindofclass和-issubclassofclass",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ismemberofclass-、-iskindofclass和-issubclassofclass","aria-hidden":"true"},"#"),l(" isMemberOfClass 、 isKindOfClass和 isSubclassOfClass")],-1),t=s("p",null,[l("isMemberOfClass, isKindOfClass, 和 isSubclassOfClass 是 Objective-C 和 Swift 中用于检查对象类型的方法。"),s("br")],-1),o=s("p",null,"这三个方法都是用来判断一个对象的类型，即判断一个对象是否是某个类或其子类的实例。",-1),f=s("ul",null,[s("li",null,"isMemberOfClass 用于检查对象是否是指定类的实例，不包括子类。如果该对象是指定类的实例，则返回 YES，否则返回 NO。"),s("li",null,"isKindOfClass 用于检查对象是否是指定类或其子类的实例。如果该对象是指定类或其子类的实例，则返回 YES，否则返回 NO。"),s("li",null,"isSubclassOfClass 用于检查一个类是否是另一个类的子类。如果该类是另一个类的子类，则返回 YES，否则返回 NO。")],-1),r=s("p",null,"三者的主要区别在于检查的对象类型不同，isMemberOfClass 和 isKindOfClass 都是用来检查对象的实例类型，而 isSubclassOfClass 是用来检查类的类型。",-1),_=[n,t,o,f,r];function d(u,O){return a(),i("div",null,_)}const h=e(c,[["render",d],["__file","23.html.vue"]]);export{h as default};
